{"version":3,"file":"static/js/home.d887ab27.chunk.js","mappings":"qNAAA,IAEMA,EAAO,SAACC,EAAUC,GAAX,OACXC,MAHe,yCAGEF,EAAUC,GAASE,MAAK,SAACC,GAAD,OAAcA,EAASC,WAE5DC,EAAM,SAACN,GAAD,OAAcD,EAAKC,EAAU,CAAEO,OAAQ,SAE7CC,EAAO,SAACR,EAAUS,GAAX,OACXV,EAAKC,EAAU,CACbO,OAAQ,OACRG,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUJ,MAGnBK,EAAS,SAACd,EAAUe,GAAX,OACbhB,EAAK,GAAD,OAAIC,EAAJ,YAAgBe,GAAM,CAAER,OAAQ,YAEhCS,EAAM,SAAChB,EAAUe,EAAIN,GAAf,OACVV,EAAK,GAAD,OAAIC,EAAJ,YAAgBe,GAAM,CACxBR,OAAQ,MACRG,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUJ,O,2HCxBzB,GAAgB,KAAO,oBAAoB,KAAO,oBAAoB,YAAc,2BAA2B,KAAO,qB,SCEhHQ,EAAO,SAACC,GACZ,MAAyDA,EAAMC,MAAvDJ,EAAR,EAAQA,GAAIK,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,YAAaC,EAA9C,EAA8CA,OAC9C,OACE,iBAAKC,UAAWC,EAAAA,KAAhB,WACE,yBACE,SAAC,KAAD,CAAMC,GAAE,gBAAWZ,GAAnB,SAA0BK,OAE5B,cAAGK,UAAWC,EAAAA,KAAd,SAA4BL,KAC5B,gBAAKO,IAAKJ,EAAQK,IAAKT,KACvB,cAAGK,UAAWC,EAAAA,YAAd,SAAmCH,KACnC,eAAIE,UAAWC,EAAAA,KAAf,SACGJ,EAAOQ,KAAI,SAACC,EAAGC,GAAJ,OACV,wBAAaD,GAAJC,SAGb,gBAAKP,UAAWC,EAAAA,c,SCjBtB,EAAyB,sBAAzB,EAAsD,oBCoDtD,EAhDa,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAO,mCAAG,qGACSlC,EAAAA,EAAAA,IAAI,WADb,OACRF,EADQ,OAEd+B,EAAU/B,GAFI,2CAAH,qDAkBb,OAbAqC,EAAAA,EAAAA,YAAU,WACRD,MACC,KAEHC,EAAAA,EAAAA,YAAU,WACR,IAAMhC,EAAOyB,EAAOQ,QAClB,SAACvB,GAAD,OACEA,EAAMC,MAAMuB,cAAcC,SAASN,EAAOK,gBAC1CxB,EAAMG,OAAOuB,OAAOD,SAASN,EAAOK,kBAExCN,EAAW5B,KACV,CAAC6B,EAAQJ,KAGV,gCACE,qDACA,kBAAMT,UAAWC,EAAjB,WACE,kBAAOoB,QAAQ,SAAf,6CACA,kBACEC,YAAY,eACZC,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAWd,EAAUc,EAAMC,OAAOH,cAGhD,eAAI1B,UAAWC,EAAf,SACGU,EAAQN,KAAI,SAACX,EAAOoC,GAAR,OACX,yBACE,SAACtC,EAAD,CAAME,MAAOA,KADNoC","sources":["libs/http.js","webpack://emdb-react/./src/components/Card/style.module.scss?f404","components/Card/index.jsx","webpack://emdb-react/./src/pages/Home/style.module.scss?08fe","pages/Home/index.jsx"],"sourcesContent":["const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource, options) =>\n  fetch(BASE_URL + resource, options).then((response) => response.json());\n\nconst GET = (resource) => http(resource, { method: \"GET\" });\n\nconst POST = (resource, data) =>\n  http(resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\nconst DELETE = (resource, id) =>\n  http(`${resource}/${id}`, { method: \"DELETE\" });\n\nconst PUT = (resource, id, data) =>\n  http(`${resource}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\nexport { GET, POST, PUT, DELETE };\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__wfhuK\",\"year\":\"style_year__E94gi\",\"description\":\"style_description__DMV6Y\",\"tags\":\"style_tags__bX3o+\"};","import { Link } from \"react-router-dom\";\nimport styles from \"./style.module.scss\";\n\nconst Card = (props) => {\n  const { id, title, year, genres, description, poster } = props.movie;\n  return (\n    <div className={styles.card}>\n      <h3>\n        <Link to={`/edit/${id}`}>{title}</Link>\n      </h3>\n      <p className={styles.year}>{year}</p>\n      <img src={poster} alt={title} />\n      <p className={styles.description}>{description}</p>\n      <ul className={styles.tags}>\n        {genres.map((e, i) => (\n          <li key={i}>{e}</li>\n        ))}\n      </ul>\n      <div className={styles.actions}></div>\n    </div>\n  );\n};\n\nexport { Card };\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"style_search__0UxYy\",\"list\":\"style_list__2yW8f\"};","import { useState, useEffect } from \"react\";\nimport { Card } from \"./../../components/Card\";\nimport { GET } from \"./../../libs/http\";\nimport styles from \"./style.module.scss\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [results, setResults] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const getData = async () => {\n    const response = await GET(\"/movies\");\n    setMovies(response);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    const data = movies.filter(\n      (movie) =>\n        movie.title.toLowerCase().includes(search.toLowerCase()) ||\n        movie.genres.join().includes(search.toLowerCase())\n    );\n    setResults(data);\n  }, [search, movies]);\n\n  return (\n    <section>\n      <h1>Edgemony Movie DataBase</h1>\n      <form className={styles.search}>\n        <label htmlFor=\"search\">Search by title or categories:</label>\n        <input\n          placeholder=\"ex: deadpool\"\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n        />\n      </form>\n      <ul className={styles.list}>\n        {results.map((movie, index) => (\n          <li key={index}>\n            <Card movie={movie} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["http","resource","options","fetch","then","response","json","GET","method","POST","data","headers","body","JSON","stringify","DELETE","id","PUT","Card","props","movie","title","year","genres","description","poster","className","styles","to","src","alt","map","e","i","useState","movies","setMovies","results","setResults","search","setSearch","getData","useEffect","filter","toLowerCase","includes","join","htmlFor","placeholder","type","name","autoComplete","value","onChange","event","target","index"],"sourceRoot":""}