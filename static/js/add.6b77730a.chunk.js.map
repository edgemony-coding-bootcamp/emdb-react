{"version":3,"file":"static/js/add.6b77730a.chunk.js","mappings":"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","sources":["webpack://emdb-react/./src/components/Button/style.module.scss?b84f","components/Button/index.jsx","libs/http.js","webpack://emdb-react/./src/pages/Add/style.module.scss?601f","pages/Add/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"style_button__pEfPR\",\"danger\":\"style_danger__eOlmJ\"};","import styles from \"./style.module.scss\";\n\nconst empty = () => {};\n\nconst Button = (props) => {\n  const type = props.type || \"submit\";\n  const danger = props.danger || false;\n  const cb = props.cb || empty;\n\n  const classes = [styles.button, danger ? styles.danger : \"\"];\n\n  return (\n    <button type={type} className={classes.join(\" \")} onClick={cb}>\n      {props.children}\n    </button>\n  );\n};\n\nexport { Button };\n","const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource, options) =>\n  fetch(BASE_URL + resource, options).then((response) => response.json());\n\nconst GET = (resource) => http(resource, { method: \"GET\" });\n\nconst POST = (resource, data) =>\n  http(resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\nconst DELETE = (resource, id) =>\n  http(`${resource}/${id}`, { method: \"DELETE\" });\n\nconst PUT = (resource, id, data) =>\n  http(`${resource}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\nexport { GET, POST, PUT, DELETE };\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"style_form__sXARX\",\"row\":\"style_row__3JL9f\",\"actions\":\"style_actions__KhsBw\"};","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { Button } from \"./../../components/Button\";\nimport { POST } from \"./../../libs/http\";\nimport styles from \"./style.module.scss\";\n\nconst Add = () => {\n  const navigate = useNavigate();\n\n  const [title, setTitle] = useState(\"\");\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [poster, setPoster] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [description, setDescription] = useState(\"\");\n\n  const submitData = async (event) => {\n    event.preventDefault();\n\n    const movie = { title, year, poster, genres, description };\n\n    await POST(\"/movies\", movie);\n    navigate(\"/\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={submitData}>\n      <h3>Create a new movie card</h3>\n      <div className={styles.row}>\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"My movie title\"\n          autoComplete=\"off\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n        />\n      </div>\n      <div className={styles.row}>\n        <label htmlFor=\"year\">Year:</label>\n        <input\n          type=\"number\"\n          name=\"year\"\n          min=\"1895\"\n          max={year}\n          value={year}\n          onChange={(event) => setYear(parseInt(event.target.value))}\n        />\n      </div>\n      <div className={styles.row}>\n        <label htmlFor=\"poster\">Poster:</label>\n        <input\n          type=\"url\"\n          name=\"poster\"\n          placeholder=\"https://i.picsum.photos/id/317/200/300.jpg\"\n          value={poster}\n          onChange={(event) => setPoster(event.target.value)}\n        />\n      </div>\n      <div className={styles.row}>\n        <label htmlFor=\"genres\">Genres:</label>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"genres\"\n          placeholder=\"action, comedy, dramatic\"\n          value={genres.join()}\n          onChange={(event) => setGenres(event.target.value.split(\",\"))}\n        />\n      </div>\n      <div className={styles.row}>\n        <label htmlFor=\"description\">Description:</label>\n        <textarea\n          name=\"description\"\n          value={description}\n          onChange={(event) => setDescription(event.target.value)}\n        ></textarea>\n      </div>\n      <div className={styles.actions}>\n        <Button>\n          <FaPlus /> Add to the database\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default Add;\n"],"names":["empty","Button","props","type","danger","cb","classes","styles","className","join","onClick","children","http","resource","options","fetch","then","response","json","GET","method","POST","data","headers","body","JSON","stringify","DELETE","id","PUT","navigate","useNavigate","useState","title","setTitle","Date","getFullYear","year","setYear","poster","setPoster","genres","setGenres","description","setDescription","submitData","event","preventDefault","movie","onSubmit","htmlFor","name","placeholder","autoComplete","value","onChange","target","min","max","parseInt","split"],"sourceRoot":""}